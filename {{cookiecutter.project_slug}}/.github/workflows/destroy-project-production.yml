name: Destroy {{ cookiecutter.environment }} {{ cookiecutter.project_name }}

on:
  # push:
  #   branches:
  #     - production
  workflow_dispatch:

env:
  AWS_REGION: {{ cookiecutter.region }}
  TERRAFORM_VERSION: {{ cookiecutter.terraform_version }}
  WORKING_DIRECTORY: .
  TF_VAR_environment: {{ cookiecutter.environment }}
  TF_VAR_project_name: {{ cookiecutter.project_name }}
  ROLE_TO_ASSUME: ${{ '{{' }} secrets.AWS_ROLE_TO_ASSUME {{ '}}' }}
  PROJECT_NAME: {{ cookiecutter.project_name }}

jobs:
  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    environment: {{ cookiecutter.environment }}

    permissions:
      id-token: write
      contents: read
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ '{{' }} env.ROLE_TO_ASSUME {{ '}}' }}
          aws-region: ${{ '{{' }} env.AWS_REGION {{ '}}' }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: ${{ '{{' }} env.TERRAFORM_VERSION {{ '}}' }}

      - name: Generate backend configuration
        run: ./scripts/generate_backend_config.sh
        env:
          TF_VAR_environment: ${{ '{{' }} env.TF_VAR_environment {{ '}}' }}

      - name: Terraform Init
        working-directory: ${{ '{{' }} env.WORKING_DIRECTORY {{ '}}' }}
        run: terraform init
        env:
          TF_VAR_environment: ${{ '{{' }} env.TF_VAR_environment {{ '}}' }}

      - name: Select Terraform Workspace
        working-directory: ${{ '{{' }} env.WORKING_DIRECTORY {{ '}}' }}
        run: terraform workspace select ${{ '{{' }} env.TF_VAR_environment {{ '}}' }} || terraform workspace new ${{ '{{' }} env.TF_VAR_environment {{ '}}' }}
        env:
          TF_VAR_environment: ${{ '{{' }} env.TF_VAR_environment {{ '}}' }}

      - name: Terraform Destroy
        working-directory: ${{ '{{' }} env.WORKING_DIRECTORY {{ '}}' }}
        run: terraform apply -auto-approve
        env:
          TF_VAR_environment: ${{ '{{' }} env.TF_VAR_environment {{ '}}' }}
